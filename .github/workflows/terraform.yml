name: Terraform Deployment

on:
  # To Trigger the workflow Automatically on push or pull request to main branch
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - 
    
  # To Trigger the workflow Manually

  workflow_dispatch: # Allows manual triggering
    inputs:
      action:
        description: "Choose an action: apply or destroy"
        required: true
        default: "apply"

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform
      run: terraform validate

    - name: Format Terraform files
      run: terraform fmt -check

    - name: Plan Terraform deployment
      run: terraform plan -out=tfplan

    - name: Apply Terraform deployment
      if: github.event.inputs.action == 'apply'
      run: |
        terraform apply -auto-approve tfplan
        ls -la # List files to check for terraform.tfstate

    - name: Destroy Terraform resources
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve

    - name: Commit state file
      if: github.event.inputs.action == 'apply'
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add terraform.tfstate
        git commit -m "Update terraform state"
        git push